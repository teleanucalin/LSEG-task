name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install
        working-directory: ./app

      - name: Run Tests
        run: npm test
        working-directory: ./app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1

      - name: Get the GitHub SHA
        id: vars
        run: echo "sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: repository
          ECR_REPOSITORY: app-image
          IMAGE_TAG: ${{ steps.vars.outputs.sha }}
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 207567759290.dkr.ecr.eu-central-1.amazonaws.com
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 207567759290.dkr.ecr.eu-central-1.amazonaws.com/$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push 207567759290.dkr.ecr.eu-central-1.amazonaws.com/$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.0"

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="terraform.tfvars"
        working-directory: ./terraform

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
        working-directory: ./terraform
